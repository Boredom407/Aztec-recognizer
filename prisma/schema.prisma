// Prisma schema file

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(cuid())
  name                String?
  email               String?      @unique
  emailVerified       DateTime?
  image               String?
  discordId           String?      @unique
  points              Int          @default(0)

  accounts            Account[]
  sessions            Session[]
  nominationsMade     Nomination[] @relation("nominator")
  nominationsReceived Nomination[] @relation("nominee")
  votes               Vote[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Nomination {
  id           String   @id @default(cuid())
  nominatorId  String
  nomineeId    String
  reason       String?
  createdAt    DateTime @default(now())

  nominator User @relation("nominator", fields: [nominatorId], references: [id])
  nominee   User @relation("nominee",   fields: [nomineeId],   references: [id])

  votes Vote[]
}

model Vote {
  id           String   @id @default(cuid())
  nominationId String
  voterId      String
  createdAt    DateTime @default(now())

  nomination Nomination @relation(fields: [nominationId], references: [id])
  voter      User       @relation(fields: [voterId], references: [id])

  @@unique([nominationId, voterId])
}
